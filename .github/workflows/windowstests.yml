name: Windows Tests

on:
  push:
    branches: [3.3.x]
  pull_request:
    branches: [3.3.x]
  release:
    types: [published]

jobs:
  windowstests:
    name: Windows
    strategy:
      matrix:
        group: [integrity, python]
      fail-fast: false
    runs-on: windows-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache pip on Windows
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', 'setup.py') }}-2
          restore-keys: |
            ${{ runner.os }}-pip-

      # Cache yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-2
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Enable long paths
        run: Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem -Name LongPathsEnabled -Value 1
        shell: pwsh

      - name: Install dependencies
        env:
          GROUP: ${{ matrix.group }}
        run: .\scripts\ci_install
        shell: pwsh

      - name: Run test ${{ matrix.group }}
        env:
          GROUP: ${{ matrix.group }}
        run: .\scripts\ci_script
        shell: pwsh
